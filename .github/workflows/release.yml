---
name: Release

'on':
  push:
    paths-ignore:
      - '**/*.md'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
    branches:
      - 'build-*'
  workflow_dispatch:

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [
          macos-latest,
          ubuntu-latest,
        ]
        # windows-latest,

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Node.js setup
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Rust setup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Cache cargo files and outputs
        uses: Swatinem/rust-cache@v1

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            webkit2gtk-4.0 \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install dependencies (macOS)
        if: startsWith(runner.os,'macOS')
        run: |
          brew install openssl
          echo "AARCH64_APPLE_DARWIN_OPENSSL_INCLUDE_DIR=/usr/local/opt/openssl/include" >> $GITHUB_ENV
          echo "AARCH64_APPLE_DARWIN_OPENSSL_LIB_DIR=/usr/local/opt/openssl/lib" >> $GITHUB_ENV

      - name: Install app dependencies and build web
        run: |
          yarn
          cd ./gui-react
          yarn

      - name: Build the app
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__ # tauri-action replaces \_\_VERSION\_\_ with the app version
          releaseName: 'v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false

      - name: Build the app (testing)
        if: startsWith(runner.os,'macOS')
        continue-on-error: true
        run: |
          yarn run tauri build --target x86_64-apple-darwin
          yarn run tauri build --target aarch64-apple-darwin
          yarn run tauri build --target universal-apple-darwin

      - name: Artifact upload for macOS DMG (testing)
        if: startsWith(runner.os,'macOS')
        continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
          name: tari-launchpad-dmgs
          path: |
            "target/x86_64-apple-darwin/release/bundle/dmg/tari-launchpad*.dmg"
            "target/aarch64-apple-darwin/release/bundle/dmg/tari-launchpad*.dmg"
            "target/universal-apple-darwin/release/bundle/dmg/tari-launchpad*.dmg"
