---
name: Release

'on':
  push:
    paths-ignore:
      - '**/*.md'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
    branches:
      - 'main'
      - 'build-*'
  workflow_dispatch:

jobs:
  builds:
    strategy:
      fail-fast: false
      matrix:
        platform: [
          macos-latest,
          ubuntu-latest,
        ]
        # windows-latest,

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Node.js setup
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      - name: Rust setup (native)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Rust setup (macOS/aarch64)
        if: startsWith(runner.os,'macOS')
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          override: true

      - name: Cache cargo files and outputs
        uses: Swatinem/rust-cache@v2

      - name: Install dependencies (Linux)
        if: startsWith(runner.os,'Linux')
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            webkit2gtk-4.0 \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: Install dependencies (macOS)
        if: startsWith(runner.os,'macOS')
        run: |
          brew install openssl
          echo "AARCH64_APPLE_DARWIN_OPENSSL_INCLUDE_DIR=/usr/local/opt/openssl/include" >> $GITHUB_ENV
          echo "AARCH64_APPLE_DARWIN_OPENSSL_LIB_DIR=/usr/local/opt/openssl/lib" >> $GITHUB_ENV

      - name: Install app dependencies and build web
        run: |
          yarn
          cd ./gui-react
          yarn

      - name: Build the app (Linux)
        if: startsWith(runner.os,'Linux')
        continue-on-error: true
        env:
          CI: false
        run: |
          yarn run tauri build --target x86_64-unknown-linux-gnu
          # yarn run tauri build --target aarch64-unknown-linux-gnu

      - name: Build the app (macOS)
        if: startsWith(runner.os,'macOS')
        continue-on-error: true
        env:
          CI: false
        run: |
          yarn run tauri build --target x86_64-apple-darwin
          yarn run tauri build --target aarch64-apple-darwin
          yarn run tauri build --target universal-apple-darwin

      - name: Artifact upload (Linux)
        if: startsWith(runner.os,'Linux')
        continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
          name: tari-launchpad-ubuntu
          # bundle/deb/tari-launchpad_1.1.0_amd64.deb, bundle/appimage/tari-launchpad_1.1.0_amd64.AppImage
          path: |
            ${{ github.workspace }}/target/**/release/bundle/deb/tari-launchpad*.deb
            ${{ github.workspace }}/target/**/release/bundle/appimage/tari-launchpad*.AppImage

      - name: Artifact upload (macOS)
        if: startsWith(runner.os,'macOS')
        continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
          name: tari-launchpad-osx
          # x86_64-apple-darwin, aarch64-apple-darwin, universal-apple-darwin
          path: |
            ${{ github.workspace }}/target/**/release/bundle/dmg/tari-launchpad*.dmg
            ${{ github.workspace }}/target/**/release/bundle/macos/tari-launchpad*.app

  create-release:
    runs-on: ubuntu-latest
    needs: builds
    # if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          path: tari-launchpad

      - name: Verify checksums
        shell: bash
        working-directory: tari-launchpad
        run: |
          ls -alhtR
          # find . -name "*.sha256sums" -print | xargs cat >> tari-launchpad.txt.sha256sums-verify
          # cat tari-launchpad.txt.sha256sums-verify
          # sha256sum -c tari-launchpad.txt.sha256sums-verify

      - name: Create release
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        # tag should match - backend/tauri.conf.json [package : version]
        uses: ncipollo/release-action@v1
        with:
          artifacts: "tari-launchpad*/**/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          draft: true
